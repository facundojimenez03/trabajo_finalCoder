
<div class="container mt-5">
    <h1>Crear Producto Mock</h1>
    <form id="createProductForm">
        <div class="mb-3">
            <label for="name" class="form-label">Nombre</label>
            <input type="text" class="form-control" id="name" name="name">
        </div>
        <div class="mb-3">
            <label for="price" class="form-label">Precio</label>
            <input type="text" class="form-control" id="price" name="price">
        </div>
        <div class="mb-3">
            <label for="description" class="form-label">Descripción</label>
            <textarea class="form-control" id="description" name="description"></textarea>
        </div>
        <div class="mb-3">
            <label for="category" class="form-label">Categoría</label>
            <input type="text" class="form-control" id="category" name="category">
        </div>
        <div class="mb-3">
            <label for="stock" class="form-label">Stock</label>
            <input type="text" class="form-control" id="stock" name="stock">
        </div>
        <div class="mb-3">
            <label for="thumbnail" class="form-label">Thumbnail</label>
            <input type="text" class="form-control" id="thumbnail" name="thumbnail">
        </div>
        <button type="submit" class="btn btn-primary">Crear Producto</button>
    </form>
    <div id="message" class="mt-3"></div>
</div>

<script>
    document.getElementById('createProductForm').addEventListener('submit', async (e) => {
        e.preventDefault()

        const name = document.getElementById('name').value.trim()
        const price = document.getElementById('price').value.trim()
        const description = document.getElementById('description').value.trim()
        const category = document.getElementById('category').value.trim()
        const stock = document.getElementById('stock').value.trim()
        const thumbnail = document.getElementById('thumbnail').value.trim()

        if (!name || !price) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'campos vacios: ' + (!name ? 'Nombre' : 'Precio'),
            })
            return
        }

        try {
            const response = await fetch('/api/products/mockingProducts/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    name,
                    price,
                    description,
                    category,
                    stock,
                    thumbnail,
                }),
            })

            if (response.ok) {
                const result = await response.json()
                Swal.fire({
                    icon: 'success',
                    title: 'Producto creado',
                    text: result.message,
                })
            } else {
                const errorResult = await response.json()
                let errorMessage = 'Ha ocurrido un error'
                if (errorResult.details && errorResult.details.fields) {
                    errorMessage = `campos vacios: ${errorResult.details.fields.join(', ')}`
                }
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: errorMessage,
                })
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Error al crear producto',
            })
        }
    })
</script>
